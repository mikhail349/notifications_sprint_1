version: '3'
services:
  rabbitmq:
    image: rabbitmq:3-alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    volumes:
        - rabbitmq_data:/var/lib/rabbitmq/mnesia/

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
    volumes:
      - mongodb_data:/data/db

  api:
    build: ./API
    env_file:
      - ./api/.env
    restart: always
    depends_on:
      - rabbitmq
    ports:
      - 8000:8000
  worker:
    build: ./worker
    env_file:
      - ./worker/.env
    restart: always
    depends_on:
      - rabbitmq
      - mongo
  
  admin:
    user: "www-data:www-data"
    build: ./admin_panel
    env_file:
      - ./admin_panel/.env
    depends_on:
      - postgresql
    volumes:
      - staticfiles:/admin_panel/staticfiles

  nginx:
    image: nginx:1.19.2-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
      - staticfiles:/staticfiles:ro
    depends_on:
      - admin
    ports:
      - "80:80"

  postgresql:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  staticfiles:
  postgresql_data:
  rabbitmq_data:
  mongodb_data: